unit SDL.keycode;

interface

uses
  SDL.Types,
  SDL.stdinc,
  SDL.scancode;

type
  TSDL_Keycode                = Uint32;
  PSDL_Keycode                = ^TSDL_Keycode;

const
  SDLK_EXTENDED_MASK          = 1 shl 29; //(1u << 29)
  SDLK_SCANCODE_MASK          = 1 shl 30; //(1u << 30)

  function SDL_SCANCODE_TO_KEYCODE(AValue: TSDL_Scancode): TSDL_Keycode; inline;

const
  SDLK_UNKNOWN                = $00000000; // 0
  SDLK_RETURN                 = $0000000d; // '\r'
  SDLK_ESCAPE                 = $0000001b; // '\x1B'
  SDLK_BACKSPACE              = $00000008; // '\b'
  SDLK_TAB                    = $00000009; // '\t'
  SDLK_SPACE                  = $00000020; // ' '
  SDLK_EXCLAIM                = $00000021; // '!'
  SDLK_DBLAPOSTROPHE          = $00000022; // '"'
  SDLK_HASH                   = $00000023; // '#'
  SDLK_DOLLAR                 = $00000024; // '$'
  SDLK_PERCENT                = $00000025; // '%'
  SDLK_AMPERSAND              = $00000026; // '&'
  SDLK_APOSTROPHE             = $00000027; // '\''
  SDLK_LEFTPAREN              = $00000028; // '('
  SDLK_RIGHTPAREN             = $00000029; // ')'
  SDLK_ASTERISK               = $0000002a; // '*'
  SDLK_PLUS                   = $0000002b; // '+'
  SDLK_COMMA                  = $0000002c; // ','
  SDLK_MINUS                  = $0000002d; // '-'
  SDLK_PERIOD                 = $0000002e; // '.'
  SDLK_SLASH                  = $0000002f; // '/'
  SDLK_0                      = $00000030; // '0'
  SDLK_1                      = $00000031; // '1'
  SDLK_2                      = $00000032; // '2'
  SDLK_3                      = $00000033; // '3'
  SDLK_4                      = $00000034; // '4'
  SDLK_5                      = $00000035; // '5'
  SDLK_6                      = $00000036; // '6'
  SDLK_7                      = $00000037; // '7'
  SDLK_8                      = $00000038; // '8'
  SDLK_9                      = $00000039; // '9'
  SDLK_COLON                  = $0000003a; // ':'
  SDLK_SEMICOLON              = $0000003b; // ';'
  SDLK_LESS                   = $0000003c; // '<'
  SDLK_EQUALS                 = $0000003d; // '='
  SDLK_GREATER                = $0000003e; // '>'
  SDLK_QUESTION               = $0000003f; // '?'
  SDLK_AT                     = $00000040; // '@'
  SDLK_LEFTBRACKET            = $0000005b; // '['
  SDLK_BACKSLASH              = $0000005c; // '\\'
  SDLK_RIGHTBRACKET           = $0000005d; // ']'
  SDLK_CARET                  = $0000005e; // '^'
  SDLK_UNDERSCORE             = $0000005f; // '_'
  SDLK_GRAVE                  = $00000060; // '`'
  SDLK_A                      = $00000061; // 'a'
  SDLK_B                      = $00000062; // 'b'
  SDLK_C                      = $00000063; // 'c'
  SDLK_D                      = $00000064; // 'd'
  SDLK_E                      = $00000065; // 'e'
  SDLK_F                      = $00000066; // 'f'
  SDLK_G                      = $00000067; // 'g'
  SDLK_H                      = $00000068; // 'h'
  SDLK_I                      = $00000069; // 'i'
  SDLK_J                      = $0000006a; // 'j'
  SDLK_K                      = $0000006b; // 'k'
  SDLK_L                      = $0000006c; // 'l'
  SDLK_M                      = $0000006d; // 'm'
  SDLK_N                      = $0000006e; // 'n'
  SDLK_O                      = $0000006f; // 'o'
  SDLK_P                      = $00000070; // 'p'
  SDLK_Q                      = $00000071; // 'q'
  SDLK_R                      = $00000072; // 'r'
  SDLK_S                      = $00000073; // 's'
  SDLK_T                      = $00000074; // 't'
  SDLK_U                      = $00000075; // 'u'
  SDLK_V                      = $00000076; // 'v'
  SDLK_W                      = $00000077; // 'w'
  SDLK_X                      = $00000078; // 'x'
  SDLK_Y                      = $00000079; // 'y'
  SDLK_Z                      = $0000007a; // 'z'
  SDLK_LEFTBRACE              = $0000007b; // '{'
  SDLK_PIPE                   = $0000007c; // '|'
  SDLK_RIGHTBRACE             = $0000007d; // '}'
  SDLK_TILDE                  = $0000007e; // '~'
  SDLK_DELETE                 = $0000007f; // '\x7F'
  SDLK_PLUSMINUS              = $000000b1; // '\xB1'
  SDLK_CAPSLOCK               = $40000039; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK)
  SDLK_F1                     = $4000003a; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1)
  SDLK_F2                     = $4000003b; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2)
  SDLK_F3                     = $4000003c; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3)
  SDLK_F4                     = $4000003d; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4)
  SDLK_F5                     = $4000003e; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5)
  SDLK_F6                     = $4000003f; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6)
  SDLK_F7                     = $40000040; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7)
  SDLK_F8                     = $40000041; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8)
  SDLK_F9                     = $40000042; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9)
  SDLK_F10                    = $40000043; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10)
  SDLK_F11                    = $40000044; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11)
  SDLK_F12                    = $40000045; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12)
  SDLK_PRINTSCREEN            = $40000046; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN)
  SDLK_SCROLLLOCK             = $40000047; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK)
  SDLK_PAUSE                  = $40000048; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE)
  SDLK_INSERT                 = $40000049; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT)
  SDLK_HOME                   = $4000004a; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME)
  SDLK_PAGEUP                 = $4000004b; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP)
  SDLK_END                    = $4000004d; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END)
  SDLK_PAGEDOWN               = $4000004e; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN)
  SDLK_RIGHT                  = $4000004f; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT)
  SDLK_LEFT                   = $40000050; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT)
  SDLK_DOWN                   = $40000051; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN)
  SDLK_UP                     = $40000052; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP)
  SDLK_NUMLOCKCLEAR           = $40000053; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR)
  SDLK_KP_DIVIDE              = $40000054; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE)
  SDLK_KP_MULTIPLY            = $40000055; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY)
  SDLK_KP_MINUS               = $40000056; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS)
  SDLK_KP_PLUS                = $40000057; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS)
  SDLK_KP_ENTER               = $40000058; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER)
  SDLK_KP_1                   = $40000059; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1)
  SDLK_KP_2                   = $4000005a; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2)
  SDLK_KP_3                   = $4000005b; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3)
  SDLK_KP_4                   = $4000005c; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4)
  SDLK_KP_5                   = $4000005d; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5)
  SDLK_KP_6                   = $4000005e; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6)
  SDLK_KP_7                   = $4000005f; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7)
  SDLK_KP_8                   = $40000060; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8)
  SDLK_KP_9                   = $40000061; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9)
  SDLK_KP_0                   = $40000062; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0)
  SDLK_KP_PERIOD              = $40000063; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD)
  SDLK_APPLICATION            = $40000065; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION)
  SDLK_POWER                  = $40000066; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER)
  SDLK_KP_EQUALS              = $40000067; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS)
  SDLK_F13                    = $40000068; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13)
  SDLK_F14                    = $40000069; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14)
  SDLK_F15                    = $4000006a; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15)
  SDLK_F16                    = $4000006b; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16)
  SDLK_F17                    = $4000006c; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17)
  SDLK_F18                    = $4000006d; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18)
  SDLK_F19                    = $4000006e; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19)
  SDLK_F20                    = $4000006f; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20)
  SDLK_F21                    = $40000070; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21)
  SDLK_F22                    = $40000071; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22)
  SDLK_F23                    = $40000072; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23)
  SDLK_F24                    = $40000073; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24)
  SDLK_EXECUTE                = $40000074; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE)
  SDLK_HELP                   = $40000075; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP)
  SDLK_MENU                   = $40000076; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU)
  SDLK_SELECT                 = $40000077; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT)
  SDLK_STOP                   = $40000078; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP)
  SDLK_AGAIN                  = $40000079; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN)
  SDLK_UNDO                   = $4000007a; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO)
  SDLK_CUT                    = $4000007b; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT)
  SDLK_COPY                   = $4000007c; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY)
  SDLK_PASTE                  = $4000007d; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE)
  SDLK_FIND                   = $4000007e; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND)
  SDLK_MUTE                   = $4000007f; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE)
  SDLK_VOLUMEUP               = $40000080; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP)
  SDLK_VOLUMEDOWN             = $40000081; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN)
  SDLK_KP_COMMA               = $40000085; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA)
  SDLK_KP_EQUALSAS400         = $40000086; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400)
  SDLK_ALTERASE               = $40000099; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE)
  SDLK_SYSREQ                 = $4000009a; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ)
  SDLK_CANCEL                 = $4000009b; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL)
  SDLK_CLEAR                  = $4000009c; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR)
  SDLK_PRIOR                  = $4000009d; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR)
  SDLK_RETURN2                = $4000009e; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2)
  SDLK_SEPARATOR              = $4000009f; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR)
  SDLK_OUT                    = $400000a0; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT)
  SDLK_OPER                   = $400000a1; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER)
  SDLK_CLEARAGAIN             = $400000a2; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN)
  SDLK_CRSEL                  = $400000a3; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL)
  SDLK_EXSEL                  = $400000a4; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL)
  SDLK_KP_00                  = $400000b0; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00)
  SDLK_KP_000                 = $400000b1; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000)
  SDLK_THOUSANDSSEPARATOR     = $400000b2; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR)
  SDLK_DECIMALSEPARATOR       = $400000b3; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR)
  SDLK_CURRENCYUNIT           = $400000b4; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT)
  SDLK_CURRENCYSUBUNIT        = $400000b5; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT)
  SDLK_KP_LEFTPAREN           = $400000b6; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN)
  SDLK_KP_RIGHTPAREN          = $400000b7; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN)
  SDLK_KP_LEFTBRACE           = $400000b8; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE)
  SDLK_KP_RIGHTBRACE          = $400000b9; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE)
  SDLK_KP_TAB                 = $400000ba; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB)
  SDLK_KP_BACKSPACE           = $400000bb; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE)
  SDLK_KP_A                   = $400000bc; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A)
  SDLK_KP_B                   = $400000bd; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B)
  SDLK_KP_C                   = $400000be; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C)
  SDLK_KP_D                   = $400000bf; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D)
  SDLK_KP_E                   = $400000c0; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E)
  SDLK_KP_F                   = $400000c1; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F)
  SDLK_KP_XOR                 = $400000c2; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR)
  SDLK_KP_POWER               = $400000c3; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER)
  SDLK_KP_PERCENT             = $400000c4; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT)
  SDLK_KP_LESS                = $400000c5; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS)
  SDLK_KP_GREATER             = $400000c6; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER)
  SDLK_KP_AMPERSAND           = $400000c7; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND)
  SDLK_KP_DBLAMPERSAND        = $400000c8; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND)
  SDLK_KP_VERTICALBAR         = $400000c9; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR)
  SDLK_KP_DBLVERTICALBAR      = $400000ca; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR)
  SDLK_KP_COLON               = $400000cb; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON)
  SDLK_KP_HASH                = $400000cc; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH)
  SDLK_KP_SPACE               = $400000cd; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE)
  SDLK_KP_AT                  = $400000ce; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT)
  SDLK_KP_EXCLAM              = $400000cf; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM)
  SDLK_KP_MEMSTORE            = $400000d0; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE)
  SDLK_KP_MEMRECALL           = $400000d1; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL)
  SDLK_KP_MEMCLEAR            = $400000d2; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR)
  SDLK_KP_MEMADD              = $400000d3; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD)
  SDLK_KP_MEMSUBTRACT         = $400000d4; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT)
  SDLK_KP_MEMMULTIPLY         = $400000d5; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY)
  SDLK_KP_MEMDIVIDE           = $400000d6; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE)
  SDLK_KP_PLUSMINUS           = $400000d7; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS)
  SDLK_KP_CLEAR               = $400000d8; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR)
  SDLK_KP_CLEARENTRY          = $400000d9; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY)
  SDLK_KP_BINARY              = $400000da; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY)
  SDLK_KP_OCTAL               = $400000db; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL)
  SDLK_KP_DECIMAL             = $400000dc; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL)
  SDLK_KP_HEXADECIMAL         = $400000dd; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL)
  SDLK_LCTRL                  = $400000e0; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL)
  SDLK_LSHIFT                 = $400000e1; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT)
  SDLK_LALT                   = $400000e2; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT)
  SDLK_LGUI                   = $400000e3; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI)
  SDLK_RCTRL                  = $400000e4; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL)
  SDLK_RSHIFT                 = $400000e5; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT)
  SDLK_RALT                   = $400000e6; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT)
  SDLK_RGUI                   = $400000e7; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI)
  SDLK_MODE                   = $40000101; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE)
  SDLK_SLEEP                  = $40000102; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP)
  SDLK_WAKE                   = $40000103; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WAKE)
  SDLK_CHANNEL_INCREMENT      = $40000104; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CHANNEL_INCREMENT)
  SDLK_CHANNEL_DECREMENT      = $40000105; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CHANNEL_DECREMENT)
  SDLK_MEDIA_PLAY             = $40000106; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PLAY)
  SDLK_MEDIA_PAUSE            = $40000107; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PAUSE)
  SDLK_MEDIA_RECORD           = $40000108; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_RECORD)
  SDLK_MEDIA_FAST_FORWARD     = $40000109; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_FAST_FORWARD)
  SDLK_MEDIA_REWIND           = $4000010a; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_REWIND)
  SDLK_MEDIA_NEXT_TRACK       = $4000010b; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_NEXT_TRACK)
  SDLK_MEDIA_PREVIOUS_TRACK   = $4000010c; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PREVIOUS_TRACK)
  SDLK_MEDIA_STOP             = $4000010d; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_STOP)
  SDLK_MEDIA_EJECT            = $4000010e; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_EJECT)
  SDLK_MEDIA_PLAY_PAUSE       = $4000010f; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PLAY_PAUSE)
  SDLK_MEDIA_SELECT           = $40000110; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_SELECT)
  SDLK_AC_NEW                 = $40000111; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_NEW)
  SDLK_AC_OPEN                = $40000112; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_OPEN)
  SDLK_AC_CLOSE               = $40000113; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_CLOSE)
  SDLK_AC_EXIT                = $40000114; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_EXIT)
  SDLK_AC_SAVE                = $40000115; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SAVE)
  SDLK_AC_PRINT               = $40000116; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_PRINT)
  SDLK_AC_PROPERTIES          = $40000117; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_PROPERTIES)
  SDLK_AC_SEARCH              = $40000118; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH)
  SDLK_AC_HOME                = $40000119; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME)
  SDLK_AC_BACK                = $4000011a; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK)
  SDLK_AC_FORWARD             = $4000011b; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD)
  SDLK_AC_STOP                = $4000011c; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP)
  SDLK_AC_REFRESH             = $4000011d; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH)
  SDLK_AC_BOOKMARKS           = $4000011e; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS)
  SDLK_SOFTLEFT               = $4000011f; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTLEFT)
  SDLK_SOFTRIGHT              = $40000120; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTRIGHT)
  SDLK_CALL                   = $40000121; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALL)
  SDLK_ENDCALL                = $40000122; // SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ENDCALL)
  SDLK_LEFT_TAB               = $20000001; // Extended key Left Tab
  SDLK_LEVEL5_SHIFT           = $20000002; // Extended key Level 5 Shift
  SDLK_MULTI_KEY_COMPOSE      = $20000003; // Extended key Multi-key Compose
  SDLK_LMETA                  = $20000004; // Extended key Left Meta
  SDLK_RMETA                  = $20000005; // Extended key Right Meta
  SDLK_LHYPER                 = $20000006; // Extended key Left Hyper
  SDLK_RHYPER                 = $20000007; // Extended key Right Hyper

type
  TSDL_Keymod                 = Uint16;
  PSDL_Keymod                 = ^TSDL_Keymod;

const
  SDL_KMOD_NONE               = $0000; // no modifier is applicable.
  SDL_KMOD_LSHIFT             = $0001; // the left Shift key is down.
  SDL_KMOD_RSHIFT             = $0002; // the right Shift key is down.
  SDL_KMOD_LEVEL5             = $0004; // the Level 5 Shift key is down.
  SDL_KMOD_LCTRL              = $0040; // the left Ctrl (Control) key is down.
  SDL_KMOD_RCTRL              = $0080; // the right Ctrl (Control) key is down.
  SDL_KMOD_LALT               = $0100; // the left Alt key is down.
  SDL_KMOD_RALT               = $0200; // the right Alt key is down.
  SDL_KMOD_LGUI               = $0400; // the left GUI key (often the Windows key) is down.
  SDL_KMOD_RGUI               = $0800; // the right GUI key (often the Windows key) is down.
  SDL_KMOD_NUM                = $1000; // the Num Lock key (may be located on an extended keypad) is down.
  SDL_KMOD_CAPS               = $2000; // the Caps Lock key is down.
  SDL_KMOD_MODE               = $4000; // the !AltGr key is down.
  SDL_KMOD_SCROLL             = $8000; // the Scroll Lock key is down.
  SDL_KMOD_CTRL               = SDL_KMOD_LCTRL or SDL_KMOD_RCTRL;   // Any Ctrl key is down.
  SDL_KMOD_SHIFT              = SDL_KMOD_LSHIFT or SDL_KMOD_RSHIFT; // Any Shift key is down.
  SDL_KMOD_ALT                = SDL_KMOD_LALT or SDL_KMOD_RALT;     // Any Alt key is down.
  SDL_KMOD_GUI                = SDL_KMOD_LGUI or SDL_KMOD_RGUI;     // Any GUI key is down.

implementation

function SDL_SCANCODE_TO_KEYCODE(AValue: TSDL_Scancode): TSDL_Keycode;
begin
  Result                      := Ord(AValue) or SDLK_SCANCODE_MASK;
end;

end.
